import groovy.json.JsonSlurper

def ModulesConfig = copySpec{
    includeEmptyDirs = true
    from 'template'
    exclude "build", "*.class", "*.java", "*.iml"
}

task ModulesCtreation {
    ext.modulesConfig = []
    doFirst {
        def configTemp= new File("modules.json")
        if (configTemp.exists()) {
            def configs = new JsonSlurper().parse(configTemp)
            if (configs.size() > 0) {
                configs.forEach { config ->
                    def moduleDir = new File(config.moduleName)
                    if (!moduleDir.exists() | !moduleDir.isDirectory()) {
                        modulesConfig.add(config)
                        mkdir "${config.moduleName}/src/main/java/${config.applicationId.replaceAll('\\.', '/')}"
                    }
                }
            }
        }
    }

    doLast{
        println modulesConfig
        if (!modulesConfig.isEmpty()) {
            modulesConfig.forEach{ config->
                def binding = [
                        "applicationId": config.applicationId,
                        "packageName": config.packageName,
                        "apkName": "${config.moduleName}.apk",
                        "entryClass":"${config.applicationId}.ModuleEntry"
                ]
                copy {
                    expand binding
                    with ModulesConfig
                    into config.moduleName
                }

                copy {
                    expand binding
                    from 'template/src/main/java/com/bigger/template/ModuleEntry.java'
                    into "${config.moduleName}/src/main/java/${config.applicationId.replaceAll('\\.', '/')}"
                }
            }
        }
    }
}

task cleanTest(type: Delete) {
    delete "test"
}